/* soapH.h
   Generated by gSOAP 2.8.70 for calculatorService.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void * SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void * SOAP_FMAC4 soap_dupelement(struct soap*, const void*, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_delelement(const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_byte_DEFINED
#define SOAP_TYPE_byte_DEFINED

#ifdef SOAP_DEFAULT_byte
#define soap_default_byte(soap, a) (*(a) = SOAP_DEFAULT_byte)
#else
#define soap_default_byte(soap, a) (*(a) = (char)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 char * SOAP_FMAC4 soap_new_byte(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_byte
#define soap_PUT_byte(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_byte
#define soap_POST_send_byte(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_byte(soap, data, "byte", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_byte
#define soap_GET_byte(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_byte(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_byte
#define soap_POST_recv_byte(soap, data) ( soap_read_byte(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE_int_DEFINED
#define SOAP_TYPE_int_DEFINED

#ifdef SOAP_DEFAULT_int
#define soap_default_int(soap, a) (*(a) = SOAP_DEFAULT_int)
#else
#define soap_default_int(soap, a) (*(a) = (int)0)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int * SOAP_FMAC4 soap_new_int(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_int
#define soap_PUT_int(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_int
#define soap_POST_send_int(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_int(soap, data, "int", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_int
#define soap_GET_int(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_int(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_int
#define soap_POST_recv_int(soap, data) ( soap_read_int(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault_DEFINED
#define SOAP_TYPE_SOAP_ENV__Fault_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_new_SOAP_ENV__Fault(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Fault
#define soap_PUT_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Fault
#define soap_POST_send_SOAP_ENV__Fault(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Fault
#define soap_GET_SOAP_ENV__Fault(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Fault(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Fault
#define soap_POST_recv_SOAP_ENV__Fault(soap, data) ( soap_read_SOAP_ENV__Fault(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_SOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_new_SOAP_ENV__Reason(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Reason
#define soap_PUT_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Reason
#define soap_POST_send_SOAP_ENV__Reason(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Reason
#define soap_GET_SOAP_ENV__Reason(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Reason(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Reason
#define soap_POST_recv_SOAP_ENV__Reason(soap, data) ( soap_read_SOAP_ENV__Reason(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_SOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_new_SOAP_ENV__Detail(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Detail
#define soap_PUT_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Detail
#define soap_POST_send_SOAP_ENV__Detail(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Detail
#define soap_GET_SOAP_ENV__Detail(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Detail(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Detail
#define soap_POST_recv_SOAP_ENV__Detail(soap, data) ( soap_read_SOAP_ENV__Detail(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code_DEFINED
#define SOAP_TYPE_SOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_new_SOAP_ENV__Code(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Code
#define soap_PUT_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Code
#define soap_POST_send_SOAP_ENV__Code(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Code
#define soap_GET_SOAP_ENV__Code(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Code(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Code
#define soap_POST_recv_SOAP_ENV__Code(soap, data) ( soap_read_SOAP_ENV__Code(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header_DEFINED
#define SOAP_TYPE_SOAP_ENV__Header_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_new_SOAP_ENV__Header(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_SOAP_ENV__Header
#define soap_PUT_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_SOAP_ENV__Header
#define soap_POST_send_SOAP_ENV__Header(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_SOAP_ENV__Header
#define soap_GET_SOAP_ENV__Header(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_SOAP_ENV__Header(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_SOAP_ENV__Header
#define soap_POST_recv_SOAP_ENV__Header(soap, data) ( soap_read_SOAP_ENV__Header(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#endif

#ifndef SOAP_TYPE___tempuri__Divide__DEFINED
#define SOAP_TYPE___tempuri__Divide__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Divide_(struct soap*, struct __tempuri__Divide_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Divide_(struct soap*, const struct __tempuri__Divide_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Divide_(struct soap*, const char*, int, const struct __tempuri__Divide_ *, const char*);
SOAP_FMAC3 struct __tempuri__Divide_ * SOAP_FMAC4 soap_in___tempuri__Divide_(struct soap*, const char*, struct __tempuri__Divide_ *, const char*);

SOAP_FMAC3 struct __tempuri__Divide_ * SOAP_FMAC4 soap_new___tempuri__Divide_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Divide_(struct soap*, const struct __tempuri__Divide_ *, const char*, const char*);

#ifndef soap_write___tempuri__Divide_
#define soap_write___tempuri__Divide_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Divide_(soap, data), 0) || soap_put___tempuri__Divide_(soap, data, "-tempuri:Divide", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Divide_
#define soap_PUT___tempuri__Divide_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Divide_(soap, data), 0) || soap_put___tempuri__Divide_(soap, data, "-tempuri:Divide", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Divide_
#define soap_POST_send___tempuri__Divide_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Divide_(soap, data), 0) || soap_put___tempuri__Divide_(soap, data, "-tempuri:Divide", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Divide_ * SOAP_FMAC4 soap_get___tempuri__Divide_(struct soap*, struct __tempuri__Divide_ *, const char*, const char*);

#ifndef soap_read___tempuri__Divide_
#define soap_read___tempuri__Divide_(soap, data) ( ((data) ? (soap_default___tempuri__Divide_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Divide_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Divide_
#define soap_GET___tempuri__Divide_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Divide_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Divide_
#define soap_POST_recv___tempuri__Divide_(soap, data) ( soap_read___tempuri__Divide_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Multiply__DEFINED
#define SOAP_TYPE___tempuri__Multiply__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Multiply_(struct soap*, struct __tempuri__Multiply_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Multiply_(struct soap*, const struct __tempuri__Multiply_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Multiply_(struct soap*, const char*, int, const struct __tempuri__Multiply_ *, const char*);
SOAP_FMAC3 struct __tempuri__Multiply_ * SOAP_FMAC4 soap_in___tempuri__Multiply_(struct soap*, const char*, struct __tempuri__Multiply_ *, const char*);

SOAP_FMAC3 struct __tempuri__Multiply_ * SOAP_FMAC4 soap_new___tempuri__Multiply_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Multiply_(struct soap*, const struct __tempuri__Multiply_ *, const char*, const char*);

#ifndef soap_write___tempuri__Multiply_
#define soap_write___tempuri__Multiply_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Multiply_(soap, data), 0) || soap_put___tempuri__Multiply_(soap, data, "-tempuri:Multiply", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Multiply_
#define soap_PUT___tempuri__Multiply_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Multiply_(soap, data), 0) || soap_put___tempuri__Multiply_(soap, data, "-tempuri:Multiply", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Multiply_
#define soap_POST_send___tempuri__Multiply_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Multiply_(soap, data), 0) || soap_put___tempuri__Multiply_(soap, data, "-tempuri:Multiply", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Multiply_ * SOAP_FMAC4 soap_get___tempuri__Multiply_(struct soap*, struct __tempuri__Multiply_ *, const char*, const char*);

#ifndef soap_read___tempuri__Multiply_
#define soap_read___tempuri__Multiply_(soap, data) ( ((data) ? (soap_default___tempuri__Multiply_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Multiply_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Multiply_
#define soap_GET___tempuri__Multiply_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Multiply_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Multiply_
#define soap_POST_recv___tempuri__Multiply_(soap, data) ( soap_read___tempuri__Multiply_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Subtract__DEFINED
#define SOAP_TYPE___tempuri__Subtract__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Subtract_(struct soap*, struct __tempuri__Subtract_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Subtract_(struct soap*, const struct __tempuri__Subtract_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Subtract_(struct soap*, const char*, int, const struct __tempuri__Subtract_ *, const char*);
SOAP_FMAC3 struct __tempuri__Subtract_ * SOAP_FMAC4 soap_in___tempuri__Subtract_(struct soap*, const char*, struct __tempuri__Subtract_ *, const char*);

SOAP_FMAC3 struct __tempuri__Subtract_ * SOAP_FMAC4 soap_new___tempuri__Subtract_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Subtract_(struct soap*, const struct __tempuri__Subtract_ *, const char*, const char*);

#ifndef soap_write___tempuri__Subtract_
#define soap_write___tempuri__Subtract_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Subtract_(soap, data), 0) || soap_put___tempuri__Subtract_(soap, data, "-tempuri:Subtract", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Subtract_
#define soap_PUT___tempuri__Subtract_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Subtract_(soap, data), 0) || soap_put___tempuri__Subtract_(soap, data, "-tempuri:Subtract", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Subtract_
#define soap_POST_send___tempuri__Subtract_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Subtract_(soap, data), 0) || soap_put___tempuri__Subtract_(soap, data, "-tempuri:Subtract", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Subtract_ * SOAP_FMAC4 soap_get___tempuri__Subtract_(struct soap*, struct __tempuri__Subtract_ *, const char*, const char*);

#ifndef soap_read___tempuri__Subtract_
#define soap_read___tempuri__Subtract_(soap, data) ( ((data) ? (soap_default___tempuri__Subtract_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Subtract_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Subtract_
#define soap_GET___tempuri__Subtract_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Subtract_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Subtract_
#define soap_POST_recv___tempuri__Subtract_(soap, data) ( soap_read___tempuri__Subtract_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Add__DEFINED
#define SOAP_TYPE___tempuri__Add__DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Add_(struct soap*, struct __tempuri__Add_ *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Add_(struct soap*, const struct __tempuri__Add_ *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Add_(struct soap*, const char*, int, const struct __tempuri__Add_ *, const char*);
SOAP_FMAC3 struct __tempuri__Add_ * SOAP_FMAC4 soap_in___tempuri__Add_(struct soap*, const char*, struct __tempuri__Add_ *, const char*);

SOAP_FMAC3 struct __tempuri__Add_ * SOAP_FMAC4 soap_new___tempuri__Add_(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Add_(struct soap*, const struct __tempuri__Add_ *, const char*, const char*);

#ifndef soap_write___tempuri__Add_
#define soap_write___tempuri__Add_(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Add_(soap, data), 0) || soap_put___tempuri__Add_(soap, data, "-tempuri:Add", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Add_
#define soap_PUT___tempuri__Add_(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Add_(soap, data), 0) || soap_put___tempuri__Add_(soap, data, "-tempuri:Add", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Add_
#define soap_POST_send___tempuri__Add_(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Add_(soap, data), 0) || soap_put___tempuri__Add_(soap, data, "-tempuri:Add", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Add_ * SOAP_FMAC4 soap_get___tempuri__Add_(struct soap*, struct __tempuri__Add_ *, const char*, const char*);

#ifndef soap_read___tempuri__Add_
#define soap_read___tempuri__Add_(soap, data) ( ((data) ? (soap_default___tempuri__Add_(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Add_(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Add_
#define soap_GET___tempuri__Add_(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Add_(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Add_
#define soap_POST_recv___tempuri__Add_(soap, data) ( soap_read___tempuri__Add_(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Divide_DEFINED
#define SOAP_TYPE___tempuri__Divide_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Divide(struct soap*, struct __tempuri__Divide *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Divide(struct soap*, const struct __tempuri__Divide *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Divide(struct soap*, const char*, int, const struct __tempuri__Divide *, const char*);
SOAP_FMAC3 struct __tempuri__Divide * SOAP_FMAC4 soap_in___tempuri__Divide(struct soap*, const char*, struct __tempuri__Divide *, const char*);

SOAP_FMAC3 struct __tempuri__Divide * SOAP_FMAC4 soap_new___tempuri__Divide(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Divide(struct soap*, const struct __tempuri__Divide *, const char*, const char*);

#ifndef soap_write___tempuri__Divide
#define soap_write___tempuri__Divide(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Divide(soap, data), 0) || soap_put___tempuri__Divide(soap, data, "-tempuri:Divide", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Divide
#define soap_PUT___tempuri__Divide(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Divide(soap, data), 0) || soap_put___tempuri__Divide(soap, data, "-tempuri:Divide", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Divide
#define soap_POST_send___tempuri__Divide(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Divide(soap, data), 0) || soap_put___tempuri__Divide(soap, data, "-tempuri:Divide", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Divide * SOAP_FMAC4 soap_get___tempuri__Divide(struct soap*, struct __tempuri__Divide *, const char*, const char*);

#ifndef soap_read___tempuri__Divide
#define soap_read___tempuri__Divide(soap, data) ( ((data) ? (soap_default___tempuri__Divide(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Divide(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Divide
#define soap_GET___tempuri__Divide(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Divide(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Divide
#define soap_POST_recv___tempuri__Divide(soap, data) ( soap_read___tempuri__Divide(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Multiply_DEFINED
#define SOAP_TYPE___tempuri__Multiply_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Multiply(struct soap*, struct __tempuri__Multiply *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Multiply(struct soap*, const struct __tempuri__Multiply *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Multiply(struct soap*, const char*, int, const struct __tempuri__Multiply *, const char*);
SOAP_FMAC3 struct __tempuri__Multiply * SOAP_FMAC4 soap_in___tempuri__Multiply(struct soap*, const char*, struct __tempuri__Multiply *, const char*);

SOAP_FMAC3 struct __tempuri__Multiply * SOAP_FMAC4 soap_new___tempuri__Multiply(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Multiply(struct soap*, const struct __tempuri__Multiply *, const char*, const char*);

#ifndef soap_write___tempuri__Multiply
#define soap_write___tempuri__Multiply(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Multiply(soap, data), 0) || soap_put___tempuri__Multiply(soap, data, "-tempuri:Multiply", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Multiply
#define soap_PUT___tempuri__Multiply(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Multiply(soap, data), 0) || soap_put___tempuri__Multiply(soap, data, "-tempuri:Multiply", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Multiply
#define soap_POST_send___tempuri__Multiply(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Multiply(soap, data), 0) || soap_put___tempuri__Multiply(soap, data, "-tempuri:Multiply", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Multiply * SOAP_FMAC4 soap_get___tempuri__Multiply(struct soap*, struct __tempuri__Multiply *, const char*, const char*);

#ifndef soap_read___tempuri__Multiply
#define soap_read___tempuri__Multiply(soap, data) ( ((data) ? (soap_default___tempuri__Multiply(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Multiply(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Multiply
#define soap_GET___tempuri__Multiply(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Multiply(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Multiply
#define soap_POST_recv___tempuri__Multiply(soap, data) ( soap_read___tempuri__Multiply(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Subtract_DEFINED
#define SOAP_TYPE___tempuri__Subtract_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Subtract(struct soap*, struct __tempuri__Subtract *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Subtract(struct soap*, const struct __tempuri__Subtract *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Subtract(struct soap*, const char*, int, const struct __tempuri__Subtract *, const char*);
SOAP_FMAC3 struct __tempuri__Subtract * SOAP_FMAC4 soap_in___tempuri__Subtract(struct soap*, const char*, struct __tempuri__Subtract *, const char*);

SOAP_FMAC3 struct __tempuri__Subtract * SOAP_FMAC4 soap_new___tempuri__Subtract(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Subtract(struct soap*, const struct __tempuri__Subtract *, const char*, const char*);

#ifndef soap_write___tempuri__Subtract
#define soap_write___tempuri__Subtract(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Subtract(soap, data), 0) || soap_put___tempuri__Subtract(soap, data, "-tempuri:Subtract", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Subtract
#define soap_PUT___tempuri__Subtract(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Subtract(soap, data), 0) || soap_put___tempuri__Subtract(soap, data, "-tempuri:Subtract", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Subtract
#define soap_POST_send___tempuri__Subtract(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Subtract(soap, data), 0) || soap_put___tempuri__Subtract(soap, data, "-tempuri:Subtract", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Subtract * SOAP_FMAC4 soap_get___tempuri__Subtract(struct soap*, struct __tempuri__Subtract *, const char*, const char*);

#ifndef soap_read___tempuri__Subtract
#define soap_read___tempuri__Subtract(soap, data) ( ((data) ? (soap_default___tempuri__Subtract(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Subtract(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Subtract
#define soap_GET___tempuri__Subtract(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Subtract(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Subtract
#define soap_POST_recv___tempuri__Subtract(soap, data) ( soap_read___tempuri__Subtract(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE___tempuri__Add_DEFINED
#define SOAP_TYPE___tempuri__Add_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tempuri__Add(struct soap*, struct __tempuri__Add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tempuri__Add(struct soap*, const struct __tempuri__Add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tempuri__Add(struct soap*, const char*, int, const struct __tempuri__Add *, const char*);
SOAP_FMAC3 struct __tempuri__Add * SOAP_FMAC4 soap_in___tempuri__Add(struct soap*, const char*, struct __tempuri__Add *, const char*);

SOAP_FMAC3 struct __tempuri__Add * SOAP_FMAC4 soap_new___tempuri__Add(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tempuri__Add(struct soap*, const struct __tempuri__Add *, const char*, const char*);

#ifndef soap_write___tempuri__Add
#define soap_write___tempuri__Add(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tempuri__Add(soap, data), 0) || soap_put___tempuri__Add(soap, data, "-tempuri:Add", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT___tempuri__Add
#define soap_PUT___tempuri__Add(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Add(soap, data), 0) || soap_put___tempuri__Add(soap, data, "-tempuri:Add", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send___tempuri__Add
#define soap_POST_send___tempuri__Add(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize___tempuri__Add(soap, data), 0) || soap_put___tempuri__Add(soap, data, "-tempuri:Add", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tempuri__Add * SOAP_FMAC4 soap_get___tempuri__Add(struct soap*, struct __tempuri__Add *, const char*, const char*);

#ifndef soap_read___tempuri__Add
#define soap_read___tempuri__Add(soap, data) ( ((data) ? (soap_default___tempuri__Add(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tempuri__Add(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET___tempuri__Add
#define soap_GET___tempuri__Add(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read___tempuri__Add(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv___tempuri__Add
#define soap_POST_recv___tempuri__Add(soap, data) ( soap_read___tempuri__Add(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__DivideResponse_DEFINED
#define SOAP_TYPE__tempuri__DivideResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__DivideResponse(struct soap*, struct _tempuri__DivideResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__DivideResponse(struct soap*, const struct _tempuri__DivideResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__DivideResponse(struct soap*, const char*, int, const struct _tempuri__DivideResponse *, const char*);
SOAP_FMAC3 struct _tempuri__DivideResponse * SOAP_FMAC4 soap_in__tempuri__DivideResponse(struct soap*, const char*, struct _tempuri__DivideResponse *, const char*);

SOAP_FMAC3 struct _tempuri__DivideResponse * SOAP_FMAC4 soap_new__tempuri__DivideResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__DivideResponse(struct soap*, const struct _tempuri__DivideResponse *, const char*, const char*);

#ifndef soap_write__tempuri__DivideResponse
#define soap_write__tempuri__DivideResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__DivideResponse(soap, data), 0) || soap_put__tempuri__DivideResponse(soap, data, "tempuri:DivideResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__DivideResponse
#define soap_PUT__tempuri__DivideResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__DivideResponse(soap, data), 0) || soap_put__tempuri__DivideResponse(soap, data, "tempuri:DivideResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__DivideResponse
#define soap_POST_send__tempuri__DivideResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__DivideResponse(soap, data), 0) || soap_put__tempuri__DivideResponse(soap, data, "tempuri:DivideResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__DivideResponse * SOAP_FMAC4 soap_get__tempuri__DivideResponse(struct soap*, struct _tempuri__DivideResponse *, const char*, const char*);

#ifndef soap_read__tempuri__DivideResponse
#define soap_read__tempuri__DivideResponse(soap, data) ( ((data) ? (soap_default__tempuri__DivideResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__DivideResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__DivideResponse
#define soap_GET__tempuri__DivideResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__DivideResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__DivideResponse
#define soap_POST_recv__tempuri__DivideResponse(soap, data) ( soap_read__tempuri__DivideResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__Divide_DEFINED
#define SOAP_TYPE__tempuri__Divide_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__Divide(struct soap*, struct _tempuri__Divide *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__Divide(struct soap*, const struct _tempuri__Divide *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__Divide(struct soap*, const char*, int, const struct _tempuri__Divide *, const char*);
SOAP_FMAC3 struct _tempuri__Divide * SOAP_FMAC4 soap_in__tempuri__Divide(struct soap*, const char*, struct _tempuri__Divide *, const char*);

SOAP_FMAC3 struct _tempuri__Divide * SOAP_FMAC4 soap_new__tempuri__Divide(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__Divide(struct soap*, const struct _tempuri__Divide *, const char*, const char*);

#ifndef soap_write__tempuri__Divide
#define soap_write__tempuri__Divide(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__Divide(soap, data), 0) || soap_put__tempuri__Divide(soap, data, "tempuri:Divide", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__Divide
#define soap_PUT__tempuri__Divide(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Divide(soap, data), 0) || soap_put__tempuri__Divide(soap, data, "tempuri:Divide", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__Divide
#define soap_POST_send__tempuri__Divide(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Divide(soap, data), 0) || soap_put__tempuri__Divide(soap, data, "tempuri:Divide", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__Divide * SOAP_FMAC4 soap_get__tempuri__Divide(struct soap*, struct _tempuri__Divide *, const char*, const char*);

#ifndef soap_read__tempuri__Divide
#define soap_read__tempuri__Divide(soap, data) ( ((data) ? (soap_default__tempuri__Divide(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__Divide(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__Divide
#define soap_GET__tempuri__Divide(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__Divide(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__Divide
#define soap_POST_recv__tempuri__Divide(soap, data) ( soap_read__tempuri__Divide(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__MultiplyResponse_DEFINED
#define SOAP_TYPE__tempuri__MultiplyResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__MultiplyResponse(struct soap*, struct _tempuri__MultiplyResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__MultiplyResponse(struct soap*, const struct _tempuri__MultiplyResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__MultiplyResponse(struct soap*, const char*, int, const struct _tempuri__MultiplyResponse *, const char*);
SOAP_FMAC3 struct _tempuri__MultiplyResponse * SOAP_FMAC4 soap_in__tempuri__MultiplyResponse(struct soap*, const char*, struct _tempuri__MultiplyResponse *, const char*);

SOAP_FMAC3 struct _tempuri__MultiplyResponse * SOAP_FMAC4 soap_new__tempuri__MultiplyResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__MultiplyResponse(struct soap*, const struct _tempuri__MultiplyResponse *, const char*, const char*);

#ifndef soap_write__tempuri__MultiplyResponse
#define soap_write__tempuri__MultiplyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__MultiplyResponse(soap, data), 0) || soap_put__tempuri__MultiplyResponse(soap, data, "tempuri:MultiplyResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__MultiplyResponse
#define soap_PUT__tempuri__MultiplyResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__MultiplyResponse(soap, data), 0) || soap_put__tempuri__MultiplyResponse(soap, data, "tempuri:MultiplyResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__MultiplyResponse
#define soap_POST_send__tempuri__MultiplyResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__MultiplyResponse(soap, data), 0) || soap_put__tempuri__MultiplyResponse(soap, data, "tempuri:MultiplyResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__MultiplyResponse * SOAP_FMAC4 soap_get__tempuri__MultiplyResponse(struct soap*, struct _tempuri__MultiplyResponse *, const char*, const char*);

#ifndef soap_read__tempuri__MultiplyResponse
#define soap_read__tempuri__MultiplyResponse(soap, data) ( ((data) ? (soap_default__tempuri__MultiplyResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__MultiplyResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__MultiplyResponse
#define soap_GET__tempuri__MultiplyResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__MultiplyResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__MultiplyResponse
#define soap_POST_recv__tempuri__MultiplyResponse(soap, data) ( soap_read__tempuri__MultiplyResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__Multiply_DEFINED
#define SOAP_TYPE__tempuri__Multiply_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__Multiply(struct soap*, struct _tempuri__Multiply *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__Multiply(struct soap*, const struct _tempuri__Multiply *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__Multiply(struct soap*, const char*, int, const struct _tempuri__Multiply *, const char*);
SOAP_FMAC3 struct _tempuri__Multiply * SOAP_FMAC4 soap_in__tempuri__Multiply(struct soap*, const char*, struct _tempuri__Multiply *, const char*);

SOAP_FMAC3 struct _tempuri__Multiply * SOAP_FMAC4 soap_new__tempuri__Multiply(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__Multiply(struct soap*, const struct _tempuri__Multiply *, const char*, const char*);

#ifndef soap_write__tempuri__Multiply
#define soap_write__tempuri__Multiply(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__Multiply(soap, data), 0) || soap_put__tempuri__Multiply(soap, data, "tempuri:Multiply", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__Multiply
#define soap_PUT__tempuri__Multiply(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Multiply(soap, data), 0) || soap_put__tempuri__Multiply(soap, data, "tempuri:Multiply", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__Multiply
#define soap_POST_send__tempuri__Multiply(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Multiply(soap, data), 0) || soap_put__tempuri__Multiply(soap, data, "tempuri:Multiply", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__Multiply * SOAP_FMAC4 soap_get__tempuri__Multiply(struct soap*, struct _tempuri__Multiply *, const char*, const char*);

#ifndef soap_read__tempuri__Multiply
#define soap_read__tempuri__Multiply(soap, data) ( ((data) ? (soap_default__tempuri__Multiply(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__Multiply(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__Multiply
#define soap_GET__tempuri__Multiply(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__Multiply(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__Multiply
#define soap_POST_recv__tempuri__Multiply(soap, data) ( soap_read__tempuri__Multiply(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__SubtractResponse_DEFINED
#define SOAP_TYPE__tempuri__SubtractResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__SubtractResponse(struct soap*, struct _tempuri__SubtractResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__SubtractResponse(struct soap*, const struct _tempuri__SubtractResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__SubtractResponse(struct soap*, const char*, int, const struct _tempuri__SubtractResponse *, const char*);
SOAP_FMAC3 struct _tempuri__SubtractResponse * SOAP_FMAC4 soap_in__tempuri__SubtractResponse(struct soap*, const char*, struct _tempuri__SubtractResponse *, const char*);

SOAP_FMAC3 struct _tempuri__SubtractResponse * SOAP_FMAC4 soap_new__tempuri__SubtractResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__SubtractResponse(struct soap*, const struct _tempuri__SubtractResponse *, const char*, const char*);

#ifndef soap_write__tempuri__SubtractResponse
#define soap_write__tempuri__SubtractResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__SubtractResponse(soap, data), 0) || soap_put__tempuri__SubtractResponse(soap, data, "tempuri:SubtractResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__SubtractResponse
#define soap_PUT__tempuri__SubtractResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__SubtractResponse(soap, data), 0) || soap_put__tempuri__SubtractResponse(soap, data, "tempuri:SubtractResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__SubtractResponse
#define soap_POST_send__tempuri__SubtractResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__SubtractResponse(soap, data), 0) || soap_put__tempuri__SubtractResponse(soap, data, "tempuri:SubtractResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__SubtractResponse * SOAP_FMAC4 soap_get__tempuri__SubtractResponse(struct soap*, struct _tempuri__SubtractResponse *, const char*, const char*);

#ifndef soap_read__tempuri__SubtractResponse
#define soap_read__tempuri__SubtractResponse(soap, data) ( ((data) ? (soap_default__tempuri__SubtractResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__SubtractResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__SubtractResponse
#define soap_GET__tempuri__SubtractResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__SubtractResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__SubtractResponse
#define soap_POST_recv__tempuri__SubtractResponse(soap, data) ( soap_read__tempuri__SubtractResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__Subtract_DEFINED
#define SOAP_TYPE__tempuri__Subtract_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__Subtract(struct soap*, struct _tempuri__Subtract *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__Subtract(struct soap*, const struct _tempuri__Subtract *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__Subtract(struct soap*, const char*, int, const struct _tempuri__Subtract *, const char*);
SOAP_FMAC3 struct _tempuri__Subtract * SOAP_FMAC4 soap_in__tempuri__Subtract(struct soap*, const char*, struct _tempuri__Subtract *, const char*);

SOAP_FMAC3 struct _tempuri__Subtract * SOAP_FMAC4 soap_new__tempuri__Subtract(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__Subtract(struct soap*, const struct _tempuri__Subtract *, const char*, const char*);

#ifndef soap_write__tempuri__Subtract
#define soap_write__tempuri__Subtract(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__Subtract(soap, data), 0) || soap_put__tempuri__Subtract(soap, data, "tempuri:Subtract", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__Subtract
#define soap_PUT__tempuri__Subtract(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Subtract(soap, data), 0) || soap_put__tempuri__Subtract(soap, data, "tempuri:Subtract", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__Subtract
#define soap_POST_send__tempuri__Subtract(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Subtract(soap, data), 0) || soap_put__tempuri__Subtract(soap, data, "tempuri:Subtract", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__Subtract * SOAP_FMAC4 soap_get__tempuri__Subtract(struct soap*, struct _tempuri__Subtract *, const char*, const char*);

#ifndef soap_read__tempuri__Subtract
#define soap_read__tempuri__Subtract(soap, data) ( ((data) ? (soap_default__tempuri__Subtract(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__Subtract(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__Subtract
#define soap_GET__tempuri__Subtract(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__Subtract(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__Subtract
#define soap_POST_recv__tempuri__Subtract(soap, data) ( soap_read__tempuri__Subtract(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__AddResponse_DEFINED
#define SOAP_TYPE__tempuri__AddResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__AddResponse(struct soap*, struct _tempuri__AddResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__AddResponse(struct soap*, const struct _tempuri__AddResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__AddResponse(struct soap*, const char*, int, const struct _tempuri__AddResponse *, const char*);
SOAP_FMAC3 struct _tempuri__AddResponse * SOAP_FMAC4 soap_in__tempuri__AddResponse(struct soap*, const char*, struct _tempuri__AddResponse *, const char*);

SOAP_FMAC3 struct _tempuri__AddResponse * SOAP_FMAC4 soap_new__tempuri__AddResponse(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__AddResponse(struct soap*, const struct _tempuri__AddResponse *, const char*, const char*);

#ifndef soap_write__tempuri__AddResponse
#define soap_write__tempuri__AddResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__AddResponse(soap, data), 0) || soap_put__tempuri__AddResponse(soap, data, "tempuri:AddResponse", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__AddResponse
#define soap_PUT__tempuri__AddResponse(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__AddResponse(soap, data), 0) || soap_put__tempuri__AddResponse(soap, data, "tempuri:AddResponse", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__AddResponse
#define soap_POST_send__tempuri__AddResponse(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__AddResponse(soap, data), 0) || soap_put__tempuri__AddResponse(soap, data, "tempuri:AddResponse", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__AddResponse * SOAP_FMAC4 soap_get__tempuri__AddResponse(struct soap*, struct _tempuri__AddResponse *, const char*, const char*);

#ifndef soap_read__tempuri__AddResponse
#define soap_read__tempuri__AddResponse(soap, data) ( ((data) ? (soap_default__tempuri__AddResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__AddResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__AddResponse
#define soap_GET__tempuri__AddResponse(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__AddResponse(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__AddResponse
#define soap_POST_recv__tempuri__AddResponse(soap, data) ( soap_read__tempuri__AddResponse(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__tempuri__Add_DEFINED
#define SOAP_TYPE__tempuri__Add_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_default__tempuri__Add(struct soap*, struct _tempuri__Add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tempuri__Add(struct soap*, const struct _tempuri__Add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tempuri__Add(struct soap*, const char*, int, const struct _tempuri__Add *, const char*);
SOAP_FMAC3 struct _tempuri__Add * SOAP_FMAC4 soap_in__tempuri__Add(struct soap*, const char*, struct _tempuri__Add *, const char*);

SOAP_FMAC3 struct _tempuri__Add * SOAP_FMAC4 soap_new__tempuri__Add(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__tempuri__Add(struct soap*, const struct _tempuri__Add *, const char*, const char*);

#ifndef soap_write__tempuri__Add
#define soap_write__tempuri__Add(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__tempuri__Add(soap, data), 0) || soap_put__tempuri__Add(soap, data, "tempuri:Add", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__tempuri__Add
#define soap_PUT__tempuri__Add(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Add(soap, data), 0) || soap_put__tempuri__Add(soap, data, "tempuri:Add", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__tempuri__Add
#define soap_POST_send__tempuri__Add(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || (soap_serialize__tempuri__Add(soap, data), 0) || soap_put__tempuri__Add(soap, data, "tempuri:Add", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _tempuri__Add * SOAP_FMAC4 soap_get__tempuri__Add(struct soap*, struct _tempuri__Add *, const char*, const char*);

#ifndef soap_read__tempuri__Add
#define soap_read__tempuri__Add(soap, data) ( ((data) ? (soap_default__tempuri__Add(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__tempuri__Add(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__tempuri__Add
#define soap_GET__tempuri__Add(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__tempuri__Add(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__tempuri__Add
#define soap_POST_recv__tempuri__Add(soap, data) ( soap_read__tempuri__Add(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Reason_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Detail_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
#define SOAP_TYPE_PointerToSOAP_ENV__Code_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);
#endif

#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__DivideResponse_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__DivideResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__DivideResponse(struct soap*, struct _tempuri__DivideResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__DivideResponse(struct soap*, const char *, int, struct _tempuri__DivideResponse *const*, const char *);
SOAP_FMAC3 struct _tempuri__DivideResponse ** SOAP_FMAC4 soap_in_PointerTo_tempuri__DivideResponse(struct soap*, const char*, struct _tempuri__DivideResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__DivideResponse(struct soap*, struct _tempuri__DivideResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__DivideResponse ** SOAP_FMAC4 soap_get_PointerTo_tempuri__DivideResponse(struct soap*, struct _tempuri__DivideResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__Divide_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__Divide_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__Divide(struct soap*, struct _tempuri__Divide *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__Divide(struct soap*, const char *, int, struct _tempuri__Divide *const*, const char *);
SOAP_FMAC3 struct _tempuri__Divide ** SOAP_FMAC4 soap_in_PointerTo_tempuri__Divide(struct soap*, const char*, struct _tempuri__Divide **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__Divide(struct soap*, struct _tempuri__Divide *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__Divide ** SOAP_FMAC4 soap_get_PointerTo_tempuri__Divide(struct soap*, struct _tempuri__Divide **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__MultiplyResponse_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__MultiplyResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__MultiplyResponse(struct soap*, struct _tempuri__MultiplyResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__MultiplyResponse(struct soap*, const char *, int, struct _tempuri__MultiplyResponse *const*, const char *);
SOAP_FMAC3 struct _tempuri__MultiplyResponse ** SOAP_FMAC4 soap_in_PointerTo_tempuri__MultiplyResponse(struct soap*, const char*, struct _tempuri__MultiplyResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__MultiplyResponse(struct soap*, struct _tempuri__MultiplyResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__MultiplyResponse ** SOAP_FMAC4 soap_get_PointerTo_tempuri__MultiplyResponse(struct soap*, struct _tempuri__MultiplyResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__Multiply_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__Multiply_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__Multiply(struct soap*, struct _tempuri__Multiply *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__Multiply(struct soap*, const char *, int, struct _tempuri__Multiply *const*, const char *);
SOAP_FMAC3 struct _tempuri__Multiply ** SOAP_FMAC4 soap_in_PointerTo_tempuri__Multiply(struct soap*, const char*, struct _tempuri__Multiply **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__Multiply(struct soap*, struct _tempuri__Multiply *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__Multiply ** SOAP_FMAC4 soap_get_PointerTo_tempuri__Multiply(struct soap*, struct _tempuri__Multiply **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__SubtractResponse_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__SubtractResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__SubtractResponse(struct soap*, struct _tempuri__SubtractResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__SubtractResponse(struct soap*, const char *, int, struct _tempuri__SubtractResponse *const*, const char *);
SOAP_FMAC3 struct _tempuri__SubtractResponse ** SOAP_FMAC4 soap_in_PointerTo_tempuri__SubtractResponse(struct soap*, const char*, struct _tempuri__SubtractResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__SubtractResponse(struct soap*, struct _tempuri__SubtractResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__SubtractResponse ** SOAP_FMAC4 soap_get_PointerTo_tempuri__SubtractResponse(struct soap*, struct _tempuri__SubtractResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__Subtract_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__Subtract_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__Subtract(struct soap*, struct _tempuri__Subtract *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__Subtract(struct soap*, const char *, int, struct _tempuri__Subtract *const*, const char *);
SOAP_FMAC3 struct _tempuri__Subtract ** SOAP_FMAC4 soap_in_PointerTo_tempuri__Subtract(struct soap*, const char*, struct _tempuri__Subtract **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__Subtract(struct soap*, struct _tempuri__Subtract *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__Subtract ** SOAP_FMAC4 soap_get_PointerTo_tempuri__Subtract(struct soap*, struct _tempuri__Subtract **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__AddResponse_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__AddResponse_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__AddResponse(struct soap*, struct _tempuri__AddResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__AddResponse(struct soap*, const char *, int, struct _tempuri__AddResponse *const*, const char *);
SOAP_FMAC3 struct _tempuri__AddResponse ** SOAP_FMAC4 soap_in_PointerTo_tempuri__AddResponse(struct soap*, const char*, struct _tempuri__AddResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__AddResponse(struct soap*, struct _tempuri__AddResponse *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__AddResponse ** SOAP_FMAC4 soap_get_PointerTo_tempuri__AddResponse(struct soap*, struct _tempuri__AddResponse **, const char*, const char*);
#endif

#ifndef SOAP_TYPE_PointerTo_tempuri__Add_DEFINED
#define SOAP_TYPE_PointerTo_tempuri__Add_DEFINED
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tempuri__Add(struct soap*, struct _tempuri__Add *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tempuri__Add(struct soap*, const char *, int, struct _tempuri__Add *const*, const char *);
SOAP_FMAC3 struct _tempuri__Add ** SOAP_FMAC4 soap_in_PointerTo_tempuri__Add(struct soap*, const char*, struct _tempuri__Add **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tempuri__Add(struct soap*, struct _tempuri__Add *const*, const char*, const char*);
SOAP_FMAC3 struct _tempuri__Add ** SOAP_FMAC4 soap_get_PointerTo_tempuri__Add(struct soap*, struct _tempuri__Add **, const char*, const char*);
#endif

#ifndef SOAP_TYPE__QName_DEFINED
#define SOAP_TYPE__QName_DEFINED

#ifdef SOAP_DEFAULT__QName
#define soap_default__QName(soap, a) (*(a) = SOAP_DEFAULT__QName)
#else
#define soap_default__QName(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);

#define soap__QName2s(soap, a) soap_QName2s(soap, (a))
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2_QName(soap, s, a) soap_s2QName((soap), (s), (char**)(a), 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
#define soap_new__QName soap_new_string

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT__QName
#define soap_PUT__QName(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send__QName
#define soap_POST_send__QName(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put__QName(soap, data, "QName", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET__QName
#define soap_GET__QName(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read__QName(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv__QName
#define soap_POST_recv__QName(soap, data) ( soap_read__QName(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifndef SOAP_TYPE__XML_DEFINED
#define SOAP_TYPE__XML_DEFINED
#endif

#ifndef SOAP_TYPE_string_DEFINED
#define SOAP_TYPE_string_DEFINED

#ifdef SOAP_DEFAULT_string
#define soap_default_string(soap, a) (*(a) = SOAP_DEFAULT_string)
#else
#define soap_default_string(soap, a) (*(a) = (char *)0)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);

#define soap_string2s(soap, a) (a)
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2string(soap, s, a) soap_s2char((soap), (s), (char**)(a), 1, 0, -1, NULL)
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

SOAP_FMAC3 char * * SOAP_FMAC4 soap_new_string(struct soap *soap, int n);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_string(soap, data, "string", "") || soap_end_send(soap), (soap)->error )
#endif


#ifndef soap_PUT_string
#define soap_PUT_string(soap, URL, data) ( soap_free_temp(soap), soap_PUT(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) || soap_recv_empty_response(soap), soap_closesock(soap) )
#endif


#ifndef soap_POST_send_string
#define soap_POST_send_string(soap, URL, data) ( soap_free_temp(soap), ( soap_POST(soap, URL, NULL, "text/xml; charset=utf-8") || soap_put_string(soap, data, "string", "") || soap_end_send(soap) ) && soap_closesock(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef soap_GET_string
#define soap_GET_string(soap, URL, data) ( soap_GET(soap, URL, NULL) || soap_read_string(soap, (data)), soap_closesock(soap) )
#endif


#ifndef soap_POST_recv_string
#define soap_POST_recv_string(soap, data) ( soap_read_string(soap, (data)) || soap_closesock(soap), (soap)->error )
#endif

#endif

#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
